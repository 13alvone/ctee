#!/usr/bin/env zsh
set -e # Exit on error

# Define directory to save output files
output_dir="$HOME/.ctee/"

# Function to cleanup temp files
function cleanup {
  rm -f "$temp_zshrc"
  rm -rf "$temp_zsh_dir"
}

# Function to delete old ctee sessions
function delete_old_sessions {
  # If the output directory doesn't exist, no need to clean up
  if [[ ! -d "$output_dir" ]]; then
    return 0
  fi
  
  # Use find to delete files in output_dir that were last modified more than 7 days ago
  find "$output_dir" -type f -mtime +7 ! -exec fuser -s {} \; -exec rm {} \;
}

# Function to remove strange byte sequences
function remove_strange_bytes {
  # The tr command below deletes non-printable characters. 
  # Note that this includes newlines, so they're added back with the -c option.
  tr -cd '\11\12\15\40-\176' < "$1" > "${1}_clean"
  mv "${1}_clean" "$1"
}

# Register the cleanup function to be called on the EXIT signal
trap cleanup EXIT

# Generate a timestamp for unique filename
timestamp=$(date +%Y%m%d%H%M%S)

# Prompt the user for the recording filename if not provided
if [ -z "$1" ]
then
    filename="cli_record_$timestamp"
else
    filename="$1"
    if [ -f "${output_dir}${filename}" ]; then
        echo "Error: File ${output_dir}${filename} already exists."
        exit 1
    fi
fi

# Check if the 'script' utility is installed and accessible
if ! command -v script &> /dev/null
then
    echo "The 'script' utility could not be found. Please install it and try again."
    exit 1
fi

# Create a temporary directory and zshrc file in it
temp_zsh_dir=$(mktemp -d)
temp_zshrc="$temp_zsh_dir/.zshrc"
cat "$output_dir"etc/zshrc.ctee >> $temp_zshrc

# Create the target directory if it doesn't already exist
mkdir -p "$output_dir"

# Start recording with the 'script' command
ZDOTDIR="$temp_zsh_dir" script -a "${output_dir}${filename}" -q --command="zsh"

# Remove strange bytes
remove_strange_bytes "${output_dir}${filename}"

# Delete old sessions
delete_old_sessions

echo "Recording saved in ${output_dir}${filename}"

